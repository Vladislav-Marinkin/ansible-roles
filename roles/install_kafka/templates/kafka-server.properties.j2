# The role of this server. Setting this puts us in KRaft mode
process.roles=broker,controller

# The node id associated with this instance's roles
node.id={{ ansible_play_hosts.index(inventory_hostname) + 1 }}

# Information about the KRaft controller quorum.
{% set controller_servers = [] %}
{% for host in groups['kafka-servers'] %}
{{ controller_servers.append( loop.index ~ '@' ~ host ~ ':' ~ controller_port) }}
{% endfor %}
controller.quorum.voters={{ controller_servers | join(',') }}
{% set controller_servers = [] %}
{% for host in groups['kafka-servers'] %}
{{ controller_servers.append( host ~ ':' ~ controller_port) }}
{% endfor %}
controller.quorum.bootstrap.servers={{ controller_servers | join(',') }}

# The address the socket server listens on. It will get the value returned from
listeners=PLAINTEXT://:{{ listeners_port }},CONTROLLER://:{{ controller_port }}
inter.broker.listener.name=PLAINTEXT

# Listener name, hostname and port the controller will advertise to admin clients, broker nodes and controller nodes.
advertised.listeners=PLAINTEXT://localhost:{{ listeners_port }},CONTROLLER://localhost:{{ controller_port }}

# This is required if running in KRaft mode.
controller.listener.names=CONTROLLER

# Maps listener names to security protocols, the default is for them to be the same. See the config documentation for more details
listener.security.protocol.map=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT

num.network.threads=3
num.io.threads=8
socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600
log.dirs={{ kafka_logs_dir }}
num.partitions=1
num.recovery.threads.per.data.dir=1
offsets.topic.replication.factor=1
transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1
#log.flush.interval.messages=10000
#log.flush.interval.ms=1000
log.retention.hours=168
#log.retention.bytes=1073741824
log.segment.bytes=1073741824
log.retention.check.interval.ms=300000